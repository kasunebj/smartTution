package com.solution.smartTution.model;
// Generated Apr 17, 2019 11:31:41 AM by Hibernate Tools 3.6.0


import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="tution"
)
public class User  implements java.io.Serializable {


     private int id;
     private Role role;
     private String fname;
     private String lname;
     private String email;
     private String nic;
     private String dob;
     private String school;
     private String username;
     private String password;
     private Set<Tute> tutes = new HashSet<Tute>(0);
     private Set<TutionClass> tutionClasses = new HashSet<TutionClass>(0);

    public User() {
    }

	
    public User(int id, Role role) {
        this.id = id;
        this.role = role;
    }
    public User(int id, Role role, String fname, String lname, String email, String nic, String dob, String school, String username, String password, Set<Tute> tutes, Set<TutionClass> tutionClasses) {
       this.id = id;
       this.role = role;
       this.fname = fname;
       this.lname = lname;
       this.email = email;
       this.nic = nic;
       this.dob = dob;
       this.school = school;
       this.username = username;
       this.password = password;
       this.tutes = tutes;
       this.tutionClasses = tutionClasses;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Role_id1", nullable=false)
    public Role getRole() {
        return this.role;
    }
    
    public void setRole(Role role) {
        this.role = role;
    }

    
    @Column(name="fname", length=45)
    public String getFname() {
        return this.fname;
    }
    
    public void setFname(String fname) {
        this.fname = fname;
    }

    
    @Column(name="lname", length=45)
    public String getLname() {
        return this.lname;
    }
    
    public void setLname(String lname) {
        this.lname = lname;
    }

    
    @Column(name="email", length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="nic", length=45)
    public String getNic() {
        return this.nic;
    }
    
    public void setNic(String nic) {
        this.nic = nic;
    }

    
    @Column(name="dob", length=45)
    public String getDob() {
        return this.dob;
    }
    
    public void setDob(String dob) {
        this.dob = dob;
    }

    
    @Column(name="school", length=45)
    public String getSchool() {
        return this.school;
    }
    
    public void setSchool(String school) {
        this.school = school;
    }

    
    @Column(name="username", length=45)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", length=45)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="tute_has_user", catalog="tution", joinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="tute_id", nullable=false, updatable=false) })

    public Set<Tute> getTutes() {
        return this.tutes;
    }
    
    public void setTutes(Set<Tute> tutes) {
        this.tutes = tutes;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="tution_class_has_user", catalog="tution", joinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="tution_class_idclass", nullable=false, updatable=false) })

    public Set<TutionClass> getTutionClasses() {
        return this.tutionClasses;
    }
    
    public void setTutionClasses(Set<TutionClass> tutionClasses) {
        this.tutionClasses = tutionClasses;
    }




}


