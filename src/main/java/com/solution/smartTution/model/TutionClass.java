package com.solution.smartTution.model;
// Generated Apr 17, 2019 11:31:41 AM by Hibernate Tools 3.6.0


import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TutionClass generated by hbm2java
 */
@Entity
@Table(name="tution_class"
    ,catalog="tution"
)
public class TutionClass  implements java.io.Serializable {


     private int idclass;
     private Teacher teacher;
     private String name;
     private Byte fee;
     private Date time;
     private String subject;
     private Set<User> users = new HashSet<User>(0);
     private Set<Lesson> lessons = new HashSet<Lesson>(0);

    public TutionClass() {
    }

	
    public TutionClass(int idclass, Teacher teacher) {
        this.idclass = idclass;
        this.teacher = teacher;
    }
    public TutionClass(int idclass, Teacher teacher, String name, Byte fee, Date time, String subject, Set<User> users, Set<Lesson> lessons) {
       this.idclass = idclass;
       this.teacher = teacher;
       this.name = name;
       this.fee = fee;
       this.time = time;
       this.subject = subject;
       this.users = users;
       this.lessons = lessons;
    }
   
     @Id 

    
    @Column(name="idclass", unique=true, nullable=false)
    public int getIdclass() {
        return this.idclass;
    }
    
    public void setIdclass(int idclass) {
        this.idclass = idclass;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="teacher_id1", nullable=false)
    public Teacher getTeacher() {
        return this.teacher;
    }
    
    public void setTeacher(Teacher teacher) {
        this.teacher = teacher;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="fee", precision=2, scale=0)
    public Byte getFee() {
        return this.fee;
    }
    
    public void setFee(Byte fee) {
        this.fee = fee;
    }

    @Temporal(TemporalType.TIME)
    @Column(name="time", length=8)
    public Date getTime() {
        return this.time;
    }
    
    public void setTime(Date time) {
        this.time = time;
    }

    
    @Column(name="subject", length=45)
    public String getSubject() {
        return this.subject;
    }
    
    public void setSubject(String subject) {
        this.subject = subject;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="tution_class_has_user", catalog="tution", joinColumns = { 
        @JoinColumn(name="tution_class_idclass", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) })
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="tutionClass")
    public Set<Lesson> getLessons() {
        return this.lessons;
    }
    
    public void setLessons(Set<Lesson> lessons) {
        this.lessons = lessons;
    }




}


